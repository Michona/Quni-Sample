plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id("com.apollographql.apollo").version("$apollo_version")
}

apply from: '../scripts/gradle/dependency_versions.gradle'
apply from: '../scripts/gradle/ktlint.gradle'

android {
    compileSdkVersion target_sdk_version
    buildToolsVersion build_tools_version

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version

        buildConfigField "String", "API_GRAPHQL_URL", '"https://icanhazdadjoke.com/graphql"'
    }

    buildTypes {
        release {
        }
        debug {
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Koin for Android
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-scope:$koin_version"
    implementation "org.koin:koin-android-viewmodel:$koin_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Apollo
    api "com.apollographql.apollo:apollo-runtime:$apollo_version"
    implementation "com.apollographql.apollo:apollo-coroutines-support:$apollo_version"
    implementation "com.apollographql.apollo:apollo-normalized-cache-sqlite:$apollo_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
}

apollo {
    generateKotlinModels.set(true)
}